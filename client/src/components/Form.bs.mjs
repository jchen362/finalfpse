// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Textbox from "./Textbox.bs.mjs";
import * as Dropdown from "./Dropdown.bs.mjs";
import * as JsxRuntime from "react/jsx-runtime";

function Form(props) {
  var match = React.useState(function () {
        return "";
      });
  var fenBoard = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var colorSelection = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var difficultySelection = match$2[0];
  var match$3 = React.useState(function () {
        return "";
      });
  var setNextFenBoard = match$3[1];
  var nextFenBoard = match$3[0];
  var match$4 = React.useState(function () {
        return false;
      });
  var setIsSubmitted = match$4[1];
  var match$5 = React.useState(function () {
        return false;
      });
  var setBadQuery = match$5[1];
  var match$6 = React.useState(function () {
        return "";
      });
  var setErrorText = match$6[1];
  var colorDropdownItems = [
    {
      id: "1",
      text: "White"
    },
    {
      id: "2",
      text: "Black"
    }
  ];
  var difficultyDropdownItems = [
    {
      id: "1",
      text: "1"
    },
    {
      id: "2",
      text: "2"
    },
    {
      id: "3",
      text: "3"
    }
  ];
  var handleSubmit = function ($$event) {
    $$event.preventDefault();
    var queryString = "board=" + encodeURIComponent(fenBoard) + "&color=" + encodeURIComponent(colorSelection) + "&difficulty=" + encodeURIComponent(difficultySelection);
    var getMove = async function (query) {
      console.log(fenBoard);
      var response = await fetch(query);
      var status = response.status;
      console.log(status);
      if (status === 200) {
        var text = await response.text();
        Curry._1(setIsSubmitted, (function (param) {
                return true;
              }));
        return Curry._1(setNextFenBoard, (function (param) {
                      return text;
                    }));
      }
      var text$1 = await response.text();
      Curry._1(setErrorText, (function (param) {
              return text$1;
            }));
      return Curry._1(setBadQuery, (function (param) {
                    return true;
                  }));
    };
    console.log(getMove("http://localhost:8080/get_suggested_move?" + queryString));
  };
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsxs("form", {
                      children: [
                        JsxRuntime.jsxs("div", {
                              children: [
                                JsxRuntime.jsx(Textbox.make, {
                                      placeholder: "FEN board",
                                      value: fenBoard,
                                      onChange: match[1]
                                    }),
                                JsxRuntime.jsx(Dropdown.make, {
                                      items: colorDropdownItems,
                                      placeholder: "Select a color",
                                      onSelect: match$1[1]
                                    }),
                                JsxRuntime.jsx(Dropdown.make, {
                                      items: difficultyDropdownItems,
                                      placeholder: "Select a difficulty",
                                      onSelect: match$2[1]
                                    })
                              ],
                              className: "flex items-center space-x-4"
                            }),
                        JsxRuntime.jsx("button", {
                              children: "Submit",
                              className: "mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded",
                              type: "submit",
                              onClick: handleSubmit
                            })
                      ]
                    }),
                match$4[0] ? JsxRuntime.jsxs("div", {
                        children: [
                          JsxRuntime.jsxs("div", {
                                children: [
                                  JsxRuntime.jsx("img", {
                                        className: "h-96 w-96",
                                        src: "https://fen2image.chessvision.ai/" + fenBoard
                                      }),
                                  JsxRuntime.jsx("img", {
                                        className: "h-96 w-48",
                                        src: "./arrow.svg"
                                      }),
                                  JsxRuntime.jsx("img", {
                                        className: "h-96 w-96",
                                        src: "https://fen2image.chessvision.ai/" + nextFenBoard
                                      })
                                ],
                                className: "flex py-5"
                              }),
                          "The new FEN is " + nextFenBoard + ""
                        ]
                      }) : (
                    match$5[0] ? JsxRuntime.jsx("div", {
                            children: "Error: " + match$6[0],
                            className: "text-red-400"
                          }) : null
                  )
              ]
            });
}

var make = Form;

export {
  make ,
}
/* react Not a pure module */
